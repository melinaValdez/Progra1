/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectolibrerias;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jose Daniel
 */
public class BuscarLibros extends javax.swing.JFrame {
Libreria libFiltrada = new Libreria();
    ListaSimple listaLibs = ListaSimple.getLibrariesInstance();
    ListaDoble listaLibrosFiltrados = new ListaDoble();
    String neutroTema = "Buscar tema";
    JPanel panel = new JPanel();
    //private int i = 0;

    public BuscarLibros() {
        initComponents();
        comboTemas.removeAllItems();
        comboTemas.addItem(neutroTema);
        comboTemas.addItem("FICCION");
        comboTemas.addItem("INGENIERIA");
        comboTemas.addItem("ADMINISTRACION");
        comboTemas.addItem("CIENCIAS NATURALES");
        comboTemas.addItem("ARTES");
        comboTemas.addItem("HISTORIA");
        comboTemas.addItem("MATEMATICA");
        comboTemas.addItem("LITERATURA");
        
        DefaultTableModel model = new DefaultTableModel();
        tablaResultados.setModel(model);
        model.addColumn("Libreria");
        model.addColumn("Issn");
        model.addColumn("Nombre");
        model.addColumn("Precio");
        model.addColumn("Tema");
        model.addColumn("Disponibles");
        model.addColumn("Vendidos");
        setLibraries();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboLibrerias = new javax.swing.JComboBox<>();
        comboTemas = new javax.swing.JComboBox<>();
        libroBuscado = new javax.swing.JTextField();
        txtMinimo = new javax.swing.JTextField();
        txtMaximo = new javax.swing.JTextField();
        buscarLibro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaResultados = new javax.swing.JTable();
        lblFondo = new javax.swing.JLabel();

        jPanel2.setLayout(null);

        lblTitulo.setFont(new java.awt.Font("Segoe UI Semilight", 0, 36)); // NOI18N
        lblTitulo.setText("Buscar");
        jPanel2.add(lblTitulo);
        lblTitulo.setBounds(370, 10, 110, 70);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        jLabel1.setText("Libro");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(40, 80, 70, 30);

        jLabel2.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        jLabel2.setText("Libreria");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(300, 70, 70, 40);

        jLabel3.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        jLabel3.setText("Tema");
        jPanel2.add(jLabel3);
        jLabel3.setBounds(560, 70, 70, 40);

        jLabel5.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        jLabel5.setText("Precio Minimo");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(40, 170, 140, 40);

        jLabel6.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        jLabel6.setText("Precio Maximo");
        jPanel2.add(jLabel6);
        jLabel6.setBounds(40, 250, 180, 60);

        comboLibrerias.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        comboLibrerias.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(comboLibrerias);
        comboLibrerias.setBounds(270, 120, 180, 50);

        comboTemas.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        comboTemas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(comboTemas);
        comboTemas.setBounds(510, 120, 180, 50);

        libroBuscado.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        libroBuscado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                libroBuscadoActionPerformed(evt);
            }
        });
        jPanel2.add(libroBuscado);
        libroBuscado.setBounds(40, 120, 210, 50);

        txtMinimo.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        txtMinimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinimoActionPerformed(evt);
            }
        });
        jPanel2.add(txtMinimo);
        txtMinimo.setBounds(40, 210, 140, 40);

        txtMaximo.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        txtMaximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaximoActionPerformed(evt);
            }
        });
        jPanel2.add(txtMaximo);
        txtMaximo.setBounds(40, 310, 140, 40);

        buscarLibro.setFont(new java.awt.Font("Segoe UI Semilight", 0, 20)); // NOI18N
        buscarLibro.setText("Buscar");
        buscarLibro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarLibroActionPerformed(evt);
            }
        });
        jPanel2.add(buscarLibro);
        buscarLibro.setBounds(40, 460, 140, 50);

        tablaResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Issn", "Tema", "Precio", "Disponibles", "Vendidos", "Descripcion"
            }
        ));
        tablaResultados.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaResultadosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaResultados);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(200, 200, 630, 320);

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/background.jpg"))); // NOI18N
        jPanel2.add(lblFondo);
        lblFondo.setBounds(0, 0, 840, 540);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 836, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 541, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     private void setLibraries() {
        comboLibrerias.removeAllItems();
        comboLibrerias.addItem("Buscar Libreria");
        if (listaLibs.getSize() == 0) {
            JOptionPane.showMessageDialog(panel, "Actualmente no hay librer√≠as disponibles.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int indice = 0;
            while (indice < listaLibs.getSize()) {
                Libreria temporal = (Libreria) listaLibs.goToPos(indice);
                comboLibrerias.addItem(temporal.getNombre().toUpperCase());
                indice++;
            }
        }
    }
    private void buscarLibro(){
        Libro temporal;
        if (!libFiltrada.getNombre().equals("-")){
            for (int index = 0; index < libFiltrada.getListaLibros().getSize(); index++){
                listaLibrosFiltrados.append((Libro)libFiltrada.getListaLibros().goToPos(index));
            }
        }
        else{
            Libreria libTemporal;
            for (int cont = 0; cont < listaLibs.getSize(); cont++){
                libTemporal = (Libreria)listaLibs.goToPos(cont);
                for (int index = 0; index < libTemporal.getListaLibros().getSize(); index++){
                    listaLibrosFiltrados.append((Libro)libTemporal.getListaLibros().goToPos(index));
                }
            }
        }
        if (!comboTemas.getSelectedItem().toString().equals(neutroTema)){
            System.out.println("Tema:" + comboTemas.getSelectedItem().toString());
            for (int index = 0; index < listaLibrosFiltrados.getSize(); index++){
                temporal = (Libro)listaLibrosFiltrados.goToPos(index);
                if(!temporal.getTema().equals(comboTemas.getSelectedItem().toString())){
                    listaLibrosFiltrados.remove();
                    index--;
                }
            }
        }
        if (!libroBuscado.getText().isEmpty()){
            for (int contador = 0; contador < listaLibrosFiltrados.getSize(); contador++){
                temporal = (Libro)listaLibrosFiltrados.goToPos(contador);
                if (!temporal.getNombre().contains(libroBuscado.getText().toUpperCase())){
                    System.out.println("Filtro: " + libroBuscado.getText());
                    System.out.println("Nombre libro: " + temporal.getNombre());
                    listaLibrosFiltrados.remove();
                    contador--;
                }
            }
        }
        if (!txtMinimo.getText().isEmpty()){
            int minimo = Integer.parseInt(txtMinimo.getText());
            for (int contador = 0; contador < listaLibrosFiltrados.getSize(); contador++){
                temporal = (Libro)listaLibrosFiltrados.goToPos(contador);
                if (temporal.getPrecio() < minimo){
                    listaLibrosFiltrados.remove();
                    contador--;
                }
            }
        }
        if (!txtMaximo.getText().isEmpty()){
            int maximo = Integer.parseInt(txtMaximo.getText());
            for (int contador = 0; contador < listaLibrosFiltrados.getSize(); contador++){
                temporal = (Libro)listaLibrosFiltrados.goToPos(contador);
                if (temporal.getPrecio() > maximo){
                    listaLibrosFiltrados.remove();
                    contador--;
                }
            }
        }
    }
    public void setTable(){
        if (listaLibrosFiltrados != null){
            Libro libroTemp;
            DefaultTableModel model = new DefaultTableModel();
            tablaResultados.setModel(model);
            model.addColumn("Libreria");
            model.addColumn("Nombre");
            model.addColumn("Precio");
            model.addColumn("Tema");
            model.addColumn("Disponibles");
            tablaResultados.getColumnModel().getColumn(1).setPreferredWidth(150);
            tablaResultados.getColumnModel().getColumn(2).setPreferredWidth(20);
            tablaResultados.getColumnModel().getColumn(3).setPreferredWidth(30);
            tablaResultados.getColumnModel().getColumn(4).setPreferredWidth(40);
            for (int index = 0; index < listaLibrosFiltrados.getSize(); index++){
                libroTemp = (Libro)listaLibrosFiltrados.goToPos(index);
                model.addRow(new Object[]{libroTemp.getNombreLibreria(),libroTemp.getNombre(),libroTemp.getPrecio(),libroTemp.getTema(),libroTemp.getCantDisponible()});
            }
        }
    }
    private void libroBuscadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_libroBuscadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_libroBuscadoActionPerformed

    private void buscarLibroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarLibroActionPerformed
        listaLibrosFiltrados.clear();
        if (!comboLibrerias.getSelectedItem().equals("Buscar Libreria")){
            libFiltrada = (Libreria)listaLibs.buscarPersonalizado(comboLibrerias.getSelectedItem().toString(), -1);
        }
        else{
            libFiltrada.setNombre("-");
        }
        buscarLibro();
        setTable();
    }//GEN-LAST:event_buscarLibroActionPerformed

    private void txtMinimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMinimoActionPerformed

    private void txtMaximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaximoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaximoActionPerformed

    private void tablaResultadosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaResultadosMouseClicked
        DefaultTableModel modelo = (DefaultTableModel)tablaResultados.getModel();
        
        int indice = tablaResultados.getSelectedRow();
        
        String libreria = (String) modelo.getValueAt(indice, 0);
        String nombre = (String) modelo.getValueAt(indice, 1);
        int pprecio = (int) modelo.getValueAt(indice, 2);
        String tema = (String) modelo.getValueAt(indice, 3);
        int pdisponibles = (int)modelo.getValueAt(indice,4);
        
        String precio = Integer.toString(pprecio);
        String disponibles = Integer.toString(pdisponibles);
        
        
        new DetalleLibros(libreria,nombre,precio,tema,disponibles).setVisible(true);
    }//GEN-LAST:event_tablaResultadosMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarLibro;
    private javax.swing.JComboBox<String> comboLibrerias;
    private javax.swing.JComboBox<String> comboTemas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTextField libroBuscado;
    private javax.swing.JTable tablaResultados;
    private javax.swing.JTextField txtMaximo;
    private javax.swing.JTextField txtMinimo;
    // End of variables declaration//GEN-END:variables
}
